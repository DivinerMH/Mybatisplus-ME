<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.qianfeng</groupId>
  <artifactId>Demo_0507_PhoneRecycle</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Demo_0507_PhoneRecycle Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>

    <dependency>  <!--test需要-->
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>	<!-- 表示开发的时候引入，发布的时候不会加载此包 -->
    </dependency>

    <!-- >>>>>>>>>>>>>>>>>>>>>>spring所需要的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->
	<!-- >>>>>>>>>>>>>>>>>>>>>>frame框架<<<<<<<<<<<<<<<<<<<<<<<<< -->
	
    <dependency>  <!--使用Spring-Context的注解实现依赖注入功能-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>
    <dependency>  <!--包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>
    <dependency>  <!--包含Web 应用开发时，用到Spring 框架时所需的核心类，包括自动载入Web ApplicationContext 特性的类、Struts 与JSF 集成类、文件上传的支持类、Filter 类和大量工具辅助类-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>

    <dependency>  <!--包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>
    <dependency>  <!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。外部依赖。-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>
    <dependency>  <!--对Junit等测试框架的简单封装。-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>5.1.6.RELEASE</version>
      <scope>test</scope>
    </dependency>

    <dependency>  <!--为JDBC、Hibernate、JDO、JPA、Beans等提供的一致的声明式和编程式事务管理支持。-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>

    <dependency>  <!--包含对Spring 对JDBC 数据访问进行封装的所有类。--><!--jdbc需要，依赖spring-tx-->
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>5.1.6.RELEASE</version>
    </dependency>
    <!-- >>>>>>>>>>>>>>>>>>>>>>spring所需要的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->

    <!-- >>>>>>>>>>>>>>>>>>>>>>spring整合mybatis所需要的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->
    <dependency>  <!--mybatis-spring需要-->
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.5.0</version>
    </dependency>

    <dependency>  <!--SqlSessionFactory创建需要，mybatis需要-->
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>2.0.0</version>
    </dependency>

    <dependency>  <!--mysql数据库驱动需要-->
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.28</version>
    </dependency>
    <!-- >>>>>>>>>>>>>>>>>>>>>>spring整合mybatis所需要的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->

    <dependency>  <!--c3p0连接池：需要的包-->
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.5.2</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>  <!--记录日志，通常和  log4j.jar共同使用-->
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>  <!--封装了各种网络协议的客户端，支持FTP、NNTP、SMTP、POP3、Telnet等协议。-->
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.6</version>
    </dependency>
    <dependency>   <!--Java文件上传的工具包、文件上传时候的组件-->
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.3</version>
    </dependency>

    <!-- >>>>>>>>>>>>>>>>>>>>>>shiro框架的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->
    <dependency>  <!--shiro安全认证框架；的核心jar包-->
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>  <!--与web整合的shiro-web-->
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>  <!--与Spring整合的shiro-spring-->
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>1.3.2</version>
    </dependency>
    <!-- >>>>>>>>>>>>>>>>>>>>>>shiro框架的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->

    <!--<dependency>  &lt;!&ndash;HttpServletRequest,HttpServletResponse需要&ndash;&gt;
    <groupId>javax.servlet</groupId>
    <artifactId>servlet-api</artifactId>  &lt;!&ndash;servlet.jar 是servlet 3.0 版本之前的地址 &ndash;&gt;
    <version>3.0-alpha-1</version>
    <scope>provided</scope>
    </dependency>-->
	
    <dependency>
      <groupId>javax.servlet</groupId>  <!--提供编写servlet时要用到HttpServletRequest和HttpServletResponse 等对象的-->
      <artifactId>javax.servlet-api</artifactId>  <!--javax.servlet-api.jar 是servlet 3.0 版本之后的地址-->
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
	
	<dependency>
      <groupId>org.projectlombok</groupId>  <!--使用时，需要添加插件-->
      <artifactId>lombok</artifactId>   <!--不建议使用：提供@Set、@Get方法的快捷注解方式-->
      <version>1.18.6</version>
      <scope>provided</scope>   <!--provided表明该包只在编译和测试的时候用；-->
    </dependency>

	<dependency>  <!-- JSTL标签类 -->
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
        <version>1.2</version>
    </dependency>
	

    <!-- jackson的核心jar包：JSON的流行推动了JSON开发包的大量使用，如何高效、简便的开发json字符串的输入和输出 -->
    <!-- 以下是在maven项目中的依赖信息：-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.9.8</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.9.8</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.9.8</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.4</version>
    </dependency>
    <!-- >>>>>>>>>>>>>>>>>>>>>>jackson框架的核心jar包<<<<<<<<<<<<<<<<<<<<<<<<< -->

    <!-- Mybatis分页插件 -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>5.1.6</version>
    </dependency>

  </dependencies>


  <build>
    <finalName>Demo_0507_PhoneRecycle</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
